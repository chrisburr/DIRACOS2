name: Build and test installer
on:
  push:
    # Only build for pushes to branches
    branches:
      - '**'
    tags-ignore:
      - '**'
  schedule:
    # - cron:  '6 2 * * *'

jobs:
  build-extra-packages:
    name: Build packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Prepare environment
        run: |
          wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh
          bash Miniforge3-Linux-x86_64.sh -b -p $HOME/miniforge
          eval "$(${HOME}/miniforge/bin/conda shell.bash hook)"
          conda install --yes conda-build
      - name: Create installer
        run: |
          eval "$(${HOME}/miniforge/bin/conda shell.bash hook)"
          scripts/build_extra_packages.sh
      - name: Upload extra packages channel
        uses: actions/upload-artifact@v2
        with:
          name: extra-packages-channel
          path: conda-bld/

  build-installer:
    name: Build installer
    needs: build-extra-packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download installer
        uses: actions/download-artifact@v2
        with:
          name: extra-packages-channel
          path: conda-bld/
      - name: Prepare environment
        run: |
          wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh
          bash Miniforge3-Linux-x86_64.sh -b -p $HOME/miniforge
          eval "$(${HOME}/miniforge/bin/conda shell.bash hook)"
          sed -i "s@### LOCAL_CHANNEL ###@file:///${PWD}/conda-bld/@g" construct.yaml
          conda install --yes constructor
      - name: Create installer
        run: |
          eval "$(${HOME}/miniforge/bin/conda shell.bash hook)"
          constructor . --platform=linux-64
      - name: Upload installer
        uses: actions/upload-artifact@v2
        with:
          name: installer
          path: DIRACOS-*.sh

  get-info:
    name: Create environment.yaml
    needs: build-installer
    runs-on: ubuntu-latest
    steps:
      - name: Download installer
        uses: actions/download-artifact@v2
        with:
          name: installer
      - name: Generate environment.yaml
        run: |
          bash DIRACOS-*.sh -b -p diracos
          source diracos/diracosrc
          conda env export --file environment.yaml
      - name: Upload environment.yaml
        uses: actions/upload-artifact@v2
        with:
          name: environment-yaml
          path: |
            environment.yaml

  basic-tests:
    name: Basic tests
    needs: build-installer
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker-image:
          - "centos:6"
          - "centos:7"
          - "centos:8"
    steps:
      - uses: actions/checkout@v2
      - name: Download installer
        uses: actions/download-artifact@v2
        with:
          name: installer
      - name: Run tests
        run: scripts/run_basic_tests.sh ${{ matrix.docker-image }} DIRACOS-*.sh
